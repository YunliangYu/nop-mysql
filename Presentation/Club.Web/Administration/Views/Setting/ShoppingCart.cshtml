@model ShoppingCartSettingsModel

@{
    //page title
    ViewBag.Title = T("Admin.Configuration.Settings.ShoppingCart").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Shopping cart settings");
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Admin.Configuration.Settings.ShoppingCart")
        </h1>
        <div class="pull-right">
            <button type="submit" name="save" class="btn bg-blue">
                <i class="fa fa-floppy-o"></i>
                @T("Admin.Common.Save")
            </button>
        </div>
    </div>


    <div class="content">
        <div class="form-horizontal">
            @Html.Action("StoreScopeConfiguration", "Setting")
            @Html.Action("Mode", "Setting")
            @Html.ValidationSummary(false)

            <div class="panel-group">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        @T("Admin.Configuration.Settings.ShoppingCart.BlockTitle.Common")
                    </div>
                    <div class="panel-body">
                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.OverrideStoreCheckboxFor(model => model.ShowDiscountBox_OverrideForStore, model => model.ShowDiscountBox, Model.ActiveStoreScopeConfiguration)
                                @Html.SiteLabelFor(model => model.ShowDiscountBox)
                            </div>
                            <div class="col-md-9">
                                @Html.SiteEditorFor(model => model.ShowDiscountBox)
                                @Html.ValidationMessageFor(model => model.ShowDiscountBox)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.OverrideStoreCheckboxFor(model => model.ShowGiftCardBox_OverrideForStore, model => model.ShowGiftCardBox, Model.ActiveStoreScopeConfiguration)
                                @Html.SiteLabelFor(model => model.ShowGiftCardBox)
                            </div>
                            <div class="col-md-9">
                                @Html.SiteEditorFor(model => model.ShowGiftCardBox)
                                @Html.ValidationMessageFor(model => model.ShowGiftCardBox)
                            </div>
                        </div>
                        <div class="form-group advanced-setting">
                            <div class="col-md-3">
                                @Html.OverrideStoreCheckboxFor(model => model.AllowCartItemEditing_OverrideForStore, model => model.AllowCartItemEditing, Model.ActiveStoreScopeConfiguration)
                                @Html.SiteLabelFor(model => model.AllowCartItemEditing)
                            </div>
                            <div class="col-md-9">
                                @Html.SiteEditorFor(model => model.AllowCartItemEditing)
                                @Html.ValidationMessageFor(model => model.AllowCartItemEditing)
                            </div>
                        </div>
                        <div class="form-group advanced-setting">
                            <div class="col-md-3">
                                @Html.OverrideStoreCheckboxFor(model => model.MaximumShoppingCartItems_OverrideForStore, model => model.MaximumShoppingCartItems, Model.ActiveStoreScopeConfiguration)
                                @Html.SiteLabelFor(model => model.MaximumShoppingCartItems)
                            </div>
                            <div class="col-md-9">
                                @Html.SiteEditorFor(model => model.MaximumShoppingCartItems)
                                @Html.ValidationMessageFor(model => model.MaximumShoppingCartItems)
                            </div>
                        </div>
                        <div class="form-group advanced-setting">
                            <div class="col-md-3">
                                @Html.OverrideStoreCheckboxFor(model => model.CartsSharedBetweenStores_OverrideForStore, model => model.CartsSharedBetweenStores, Model.ActiveStoreScopeConfiguration)
                                @Html.SiteLabelFor(model => model.CartsSharedBetweenStores)
                            </div>
                            <div class="col-md-9">
                                @Html.SiteEditorFor(model => model.CartsSharedBetweenStores)
                                @Html.ValidationMessageFor(model => model.CartsSharedBetweenStores)
                            </div>
                        </div>
                        <div class="form-group advanced-setting">
                            <div class="col-md-3">
                                @Html.OverrideStoreCheckboxFor(model => model.ShowProductImagesOnShoppingCart_OverrideForStore, model => model.ShowProductImagesOnShoppingCart, Model.ActiveStoreScopeConfiguration)
                                @Html.SiteLabelFor(model => model.ShowProductImagesOnShoppingCart)
                            </div>
                            <div class="col-md-9">
                                @Html.SiteEditorFor(model => model.ShowProductImagesOnShoppingCart)
                                @Html.ValidationMessageFor(model => model.ShowProductImagesOnShoppingCart)
                            </div>
                        </div>
                        <div class="form-group advanced-setting">
                            <div class="col-md-3">
                                @Html.OverrideStoreCheckboxFor(model => model.DisplayCartAfterAddingProduct_OverrideForStore, model => model.DisplayCartAfterAddingProduct, Model.ActiveStoreScopeConfiguration)
                                @Html.SiteLabelFor(model => model.DisplayCartAfterAddingProduct)
                            </div>
                            <div class="col-md-9">
                                @Html.SiteEditorFor(model => model.DisplayCartAfterAddingProduct)
                                @Html.ValidationMessageFor(model => model.DisplayCartAfterAddingProduct)
                            </div>
                        </div>
                        <div class="form-group advanced-setting">
                            <div class="col-md-3">
                                @Html.OverrideStoreCheckboxFor(model => model.CrossSellsNumber_OverrideForStore, model => model.CrossSellsNumber, Model.ActiveStoreScopeConfiguration)
                                @Html.SiteLabelFor(model => model.CrossSellsNumber)
                            </div>
                            <div class="col-md-9">
                                @Html.SiteEditorFor(model => model.CrossSellsNumber)
                                @Html.ValidationMessageFor(model => model.CrossSellsNumber)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-heading">
                        @T("Admin.Configuration.Settings.ShoppingCart.BlockTitle.MiniShoppingCart")
                    </div>
                    <div class="panel-body">
                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.OverrideStoreCheckboxFor(model => model.MiniShoppingCartEnabled_OverrideForStore, model => model.MiniShoppingCartEnabled, Model.ActiveStoreScopeConfiguration)
                                @Html.SiteLabelFor(model => model.MiniShoppingCartEnabled)
                            </div>
                            <div class="col-md-9">
                                @Html.SiteEditorFor(model => model.MiniShoppingCartEnabled)
                                @Html.ValidationMessageFor(model => model.MiniShoppingCartEnabled)
                            </div>
                        </div>
                        <div class="form-group advanced-setting" id="pnlMiniShoppingCartProductNumber">
                            <div class="col-md-3">
                                @Html.OverrideStoreCheckboxFor(model => model.MiniShoppingCartProductNumber_OverrideForStore, model => model.MiniShoppingCartProductNumber, Model.ActiveStoreScopeConfiguration)
                                @Html.SiteLabelFor(model => model.MiniShoppingCartProductNumber)
                            </div>
                            <div class="col-md-9">
                                @Html.SiteEditorFor(model => model.MiniShoppingCartProductNumber)
                                @Html.ValidationMessageFor(model => model.MiniShoppingCartProductNumber)
                            </div>
                        </div>
                        <div class="form-group advanced-setting" id="pnlShowProductImagesInMiniShoppingCart">
                            <div class="col-md-3">
                                @Html.OverrideStoreCheckboxFor(model => model.ShowProductImagesInMiniShoppingCart_OverrideForStore, model => model.ShowProductImagesInMiniShoppingCart, Model.ActiveStoreScopeConfiguration)
                                @Html.SiteLabelFor(model => model.ShowProductImagesInMiniShoppingCart)
                            </div>
                            <div class="col-md-9">
                                @Html.SiteEditorFor(model => model.ShowProductImagesInMiniShoppingCart)
                                @Html.ValidationMessageFor(model => model.ShowProductImagesInMiniShoppingCart)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default advanced-setting">
                    <div class="panel-heading">
                        @T("Admin.Configuration.Settings.ShoppingCart.BlockTitle.Wishlist")
                    </div>
                    <div class="panel-body">
                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.OverrideStoreCheckboxFor(model => model.MaximumWishlistItems_OverrideForStore, model => model.MaximumWishlistItems, Model.ActiveStoreScopeConfiguration)
                                @Html.SiteLabelFor(model => model.MaximumWishlistItems)
                            </div>
                            <div class="col-md-9">
                                @Html.SiteEditorFor(model => model.MaximumWishlistItems)
                                @Html.ValidationMessageFor(model => model.MaximumWishlistItems)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.OverrideStoreCheckboxFor(model => model.ShowProductImagesOnWishList_OverrideForStore, model => model.ShowProductImagesOnWishList, Model.ActiveStoreScopeConfiguration)
                                @Html.SiteLabelFor(model => model.ShowProductImagesOnWishList)
                            </div>
                            <div class="col-md-9">
                                @Html.SiteEditorFor(model => model.ShowProductImagesOnWishList)
                                @Html.ValidationMessageFor(model => model.ShowProductImagesOnWishList)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.OverrideStoreCheckboxFor(model => model.EmailWishlistEnabled_OverrideForStore, model => model.EmailWishlistEnabled, Model.ActiveStoreScopeConfiguration)
                                @Html.SiteLabelFor(model => model.EmailWishlistEnabled)
                            </div>
                            <div class="col-md-9">
                                @Html.SiteEditorFor(model => model.EmailWishlistEnabled)
                                @Html.ValidationMessageFor(model => model.EmailWishlistEnabled)
                            </div>
                        </div>
                        <div class="form-group" id="pnlAllowAnonymousUsersToEmailWishlist">
                            <div class="col-md-3">
                                @Html.OverrideStoreCheckboxFor(model => model.AllowAnonymousUsersToEmailWishlist_OverrideForStore, model => model.AllowAnonymousUsersToEmailWishlist, Model.ActiveStoreScopeConfiguration)
                                @Html.SiteLabelFor(model => model.AllowAnonymousUsersToEmailWishlist)
                            </div>
                            <div class="col-md-9">
                                @Html.SiteEditorFor(model => model.AllowAnonymousUsersToEmailWishlist)
                                @Html.ValidationMessageFor(model => model.AllowAnonymousUsersToEmailWishlist)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.OverrideStoreCheckboxFor(model => model.AllowOutOfStockItemsToBeAddedToWishlist_OverrideForStore, model => model.AllowOutOfStockItemsToBeAddedToWishlist, Model.ActiveStoreScopeConfiguration)
                                @Html.SiteLabelFor(model => model.AllowOutOfStockItemsToBeAddedToWishlist)
                            </div>
                            <div class="col-md-9">
                                @Html.SiteEditorFor(model => model.AllowOutOfStockItemsToBeAddedToWishlist)
                                @Html.ValidationMessageFor(model => model.AllowOutOfStockItemsToBeAddedToWishlist)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.OverrideStoreCheckboxFor(model => model.MoveItemsFromWishlistToCart_OverrideForStore, model => model.MoveItemsFromWishlistToCart, Model.ActiveStoreScopeConfiguration)
                                @Html.SiteLabelFor(model => model.MoveItemsFromWishlistToCart)
                            </div>
                            <div class="col-md-9">
                                @Html.SiteEditorFor(model => model.MoveItemsFromWishlistToCart)
                                @Html.ValidationMessageFor(model => model.MoveItemsFromWishlistToCart)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.OverrideStoreCheckboxFor(model => model.DisplayWishlistAfterAddingProduct_OverrideForStore, model => model.DisplayWishlistAfterAddingProduct, Model.ActiveStoreScopeConfiguration)
                                @Html.SiteLabelFor(model => model.DisplayWishlistAfterAddingProduct)
                            </div>
                            <div class="col-md-9">
                                @Html.SiteEditorFor(model => model.DisplayWishlistAfterAddingProduct)
                                @Html.ValidationMessageFor(model => model.DisplayWishlistAfterAddingProduct)
                            </div>
                        </div>
                    </div>

                    <script type="text/javascript">
                        $(document).ready(function () {
                            $("#@Html.FieldIdFor(model => model.MiniShoppingCartEnabled)").click(toggleMiniShoppingCartEnabled);
                            $("#@Html.FieldIdFor(model => model.EmailWishlistEnabled)").click(toggleEmailWishlistEnabled);

                            toggleMiniShoppingCartEnabled();
                            toggleEmailWishlistEnabled();
                        });

                        function toggleMiniShoppingCartEnabled() {
                            if ($('#@Html.FieldIdFor(model => model.MiniShoppingCartEnabled)').is(':checked')) {
                                $('#pnlMiniShoppingCartProductNumber').show();
                                $('#pnlShowProductImagesInMiniShoppingCart').show();
                            } else {
                                $('#pnlMiniShoppingCartProductNumber').hide();
                                $('#pnlShowProductImagesInMiniShoppingCart').hide();
                            }
                        }

                        function toggleEmailWishlistEnabled() {
                            if ($('#@Html.FieldIdFor(model => model.EmailWishlistEnabled)').is(':checked')) {
                                $('#pnlAllowAnonymousUsersToEmailWishlist').show();
                            } else {
                                $('#pnlAllowAnonymousUsersToEmailWishlist').hide();
                            }
                        }

                    </script>
                </div>
            </div>
        </div>
    </div>
}