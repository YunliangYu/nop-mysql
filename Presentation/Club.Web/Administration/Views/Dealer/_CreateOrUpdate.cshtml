@model DealerModel
@Html.ValidationSummary(true)
@Html.HiddenFor(model => model.Id)
<script>
    function setCityValue()
    {
        var province = document.getElementById("StateProvince");
        var index = province.selectedIndex;
        var provinceId = province.options[index].value;
        jQuery.ajax({
            type: "GET",
            url: "@(Url.Action("GetCitysByProvinceId", "Dealer"))",
            data: { "ProvinceId": provinceId },
            dataType: "json",
            cache: false,
            success: function (data) {
                if (data.result == 1) {
                    $("#city").empty();
                    for (var i = 0; i < data.rows.length; i++)
                    {
                        $("#city").append("<option value='" + data.rows[i].Value + "'>" + data.rows[i].Text + "</option>");
                    }
                }
                else {
                    alert(data.message);

                }
            },
            error: function () {

                alert('获取数据失败');
            }
        });
    }


</script>
<div class="content">
    <div class="form-horizontal">
        <div id="dealer-edit" class="nav-tabs-custom">
            <ul class="nav nav-tabs">
                @Html.RenderBootstrapTabHeader("tab-info", @T("Admin.Dealers.Dealer.Info"), true)
            </ul>
            <div class="tab-content">
                @Html.RenderBootstrapTabContent("tab-info", @TabInfo(), true)
            </div>
        </div>
    </div>
</div>
@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "dealer-edit");
    EngineContext.Current.Resolve<IEventPublisher>().Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}
@*save selected tab name*@
<input type="hidden" id="selected-tab-name" name="selected-tab-name" value="@(Html.GetSelectedTabName())">
@helper TabInfo()
{
    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-body">
            @(Html.LocalizedEditor<DealerModel, DealerLocalizedModel>
                            ("dealer-localized",
                @<div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.SiteLabelFor(model => model.Locales[item].DealerName)
                        </div>
                        <div class="col-md-9">
                            @Html.SiteEditorFor(model => model.Locales[item].DealerName)
                            @Html.ValidationMessageFor(model => model.Locales[item].DealerName)
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.SiteLabelFor(model => model.Locales[item].DealerShortName)
                        </div>
                        <div class="col-md-9">
                            @Html.SiteEditorFor(model => model.Locales[item].DealerShortName)
                            @Html.HiddenFor(model => model.Locales[item].DealerShortName)
                        </div>
                    </div>
                     @Html.HiddenFor(model => model.Locales[item].LanguageId)
                </div>
                ,
                @<div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.SiteLabelFor(model => model.DealerName)
                        </div>
                        <div class="col-md-9">
                            @Html.SiteEditorFor(model => model.DealerName)
                            @Html.ValidationMessageFor(model => model.DealerName)
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.SiteLabelFor(model => model.DealerShortName)
                        </div>
                        <div class="col-md-9">
                            @Html.SiteEditorFor(model => model.DealerShortName)
                            @Html.HiddenFor(model => model.DealerShortName)
                        </div>
                    </div>
                </div>
                ))
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.SiteLabelFor(model => model.DealerCode)
                    </div>
                    <div class="col-md-9">
                        @Html.SiteEditorFor(model => model.DealerCode)
                        @Html.ValidationMessageFor(model => model.DealerCode)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.SiteLabelFor(model => model.Description)
                    </div>
                    <div class="col-md-9">
                        @Html.SiteEditorFor(model => model.Description)
                        @Html.ValidationMessageFor(model => model.Description)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.SiteLabelFor(model => model.ZipCode)
                    </div>
                    <div class="col-md-9">
                        @Html.SiteEditorFor(model => model.ZipCode)
                        @Html.ValidationMessageFor(model => model.ZipCode)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.SiteLabelFor(model => model.Fax)
                    </div>
                    <div class="col-md-9">
                        @Html.SiteEditorFor(model => model.Fax)
                        @Html.ValidationMessageFor(model => model.Fax)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.SiteLabelFor(model => model.Phone)
                    </div>
                    <div class="col-md-9">
                        @Html.SiteEditorFor(model => model.Phone)
                        @Html.ValidationMessageFor(model => model.Phone)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.SiteLabelFor(model => model.Email)
                    </div>
                    <div class="col-md-9">
                        @Html.SiteEditorFor(model => model.Email)
                        @Html.ValidationMessageFor(model => model.Email)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.SiteLabelFor(model => model.RegionId)
                    </div>
                    <div class="col-md-9">
                        @Html.SiteDropDownListFor(model => model.RegionId, Model.Regions)
                        @Html.ValidationMessageFor(model => model.RegionId)
                    </div>
                </div>
            
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.SiteLabelFor(model => model.DealerGroupId)
                    </div>
                    <div class="col-md-9">
                        @Html.SiteDropDownListFor(model => model.DealerGroupId, Model.DealerGroups)
                        @Html.ValidationMessageFor(model => model.DealerGroupId)
                    </div>
                </div>
               
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.SiteLabelFor(model => model.StateProvinceId)
                    </div>
                    <div class="col-md-9">
                        @Html.SiteDropDownListFor(model => model.StateProvinceId, Model.Provinces, new { @onchange = "setCityValue()", @id = "StateProvince" })
                        @Html.ValidationMessageFor(model => model.StateProvinceId)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.SiteLabelFor(model => model.CityId)
                    </div>
                    <div class="col-md-9">
                        @Html.SiteDropDownListFor(model => model.CityId, Model.Citys, new { @id = "city" })
                        @Html.ValidationMessageFor(model => model.CityId)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.SiteLabelFor(model => model.AvailableBusinessFields):
                    </div>
                    <div class="col-md-9">
                        @foreach (var businessField in Model.AvailableBusinessFields)
                        {
                            <input type="checkbox" name="SelectedBusinessFieldIds" value="@businessField.Id" checked="@(Model.SelectedBusinessFieldIds != null && Model.SelectedBusinessFieldIds.Contains(businessField.Id))" />@businessField.Name<text>&nbsp;</text>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}